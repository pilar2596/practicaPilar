
import java.awt.Color;
import java.awt.FileDialog;
import java.awt.MenuItem;
import java.awt.TextArea;
import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.io.PrintWriter;
import java.io.Writer;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.imageio.ImageIO;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author pilar
 */
public class PracticaPilarOcana extends javax.swing.JFrame {

    MenuItem Abrir;
    MenuItem Guardar;
    MenuItem Salir;
    TextArea texto;
    
    
    public PracticaPilarOcana() {
        initComponents();
        setSize (600,600);
        setBackground(Color.white);
        setLocationRelativeTo(null);
        setVisible(true);
        
      
        
       
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        menuBar1 = new java.awt.MenuBar();
        menu1 = new java.awt.Menu();
        menu2 = new java.awt.Menu();
        jFrame1 = new javax.swing.JFrame();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenuItem1 = new javax.swing.JMenuItem();
        jMenuItem2 = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();
        jMenuItem3 = new javax.swing.JMenuItem();

        menu1.setLabel("File");
        menuBar1.add(menu1);

        menu2.setLabel("Edit");
        menuBar1.add(menu2);

        javax.swing.GroupLayout jFrame1Layout = new javax.swing.GroupLayout(jFrame1.getContentPane());
        jFrame1.getContentPane().setLayout(jFrame1Layout);
        jFrame1Layout.setHorizontalGroup(
            jFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        jFrame1Layout.setVerticalGroup(
            jFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jScrollPane1.setViewportView(jTextArea1);

        jMenu1.setText("File");

        jMenuItem1.setText("Guardar");
        jMenuItem1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jMenuItem1MousePressed(evt);
            }
        });
        jMenu1.add(jMenuItem1);

        jMenuItem2.setText("Cargar");
        jMenuItem2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jMenuItem2MousePressed(evt);
            }
        });
        jMenuItem2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem2ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem2);

        jMenuBar1.add(jMenu1);

        jMenu2.setText("Edit");

        jMenuItem3.setText("Nuevo");
        jMenuItem3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem3ActionPerformed(evt);
            }
        });
        jMenu2.add(jMenuItem3);

        jMenuBar1.add(jMenu2);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 685, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(435, 435, 435))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 472, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jMenuItem1MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jMenuItem1MousePressed
        
        //boton de guardar
        
        JFileChooser ArchivEleg = new JFileChooser();
     ArchivEleg.setFileSelectionMode(JFileChooser.FILES_ONLY);
     int Resultado = ArchivEleg.showSaveDialog(this);
     
     if(Resultado==JFileChooser.CANCEL_OPTION){
         return;
     }
     
     File Nombre = ArchivEleg.getSelectedFile();
     if(!Nombre.exists()){
         try{
         PrintWriter salida = new PrintWriter(new FileWriter(Nombre+".txt"));
         salida.write(this.jTextArea1.getText());
         salida.close();
         }catch (IOException ex) {
         JOptionPane.showMessageDialog(null, "Error en El Archivo", "Error", JOptionPane.ERROR_MESSAGE);
         }
     }
     
     
        
    }//GEN-LAST:event_jMenuItem1MousePressed

    private void jMenuItem2MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jMenuItem2MousePressed
   
    }//GEN-LAST:event_jMenuItem2MousePressed

    private void jMenuItem2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem2ActionPerformed
       if(!"".equals(this.jTextArea1.getText())){
        int n=JOptionPane.showConfirmDialog(this,JOptionPane.OK_CANCEL_OPTION);
        
         if(n==JOptionPane.OK_OPTION){
       try {
          
            Abrir();
            
           // TODO add your handling code here:
        } catch (FileNotFoundException ex) {
            Logger.getLogger(PracticaPilarOcana.class.getName()).log(Level.SEVERE, null, ex);
        }
         }
        }
        if("".equals(this.jTextArea1.getText())){
            try {
                Abrir();
            } catch (FileNotFoundException ex) {
                Logger.getLogger(PracticaPilarOcana.class.getName()).log(Level.SEVERE, null, ex);
            }
        }

    }//GEN-LAST:event_jMenuItem2ActionPerformed

    private void jMenuItem3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem3ActionPerformed
       
        
    }//GEN-LAST:event_jMenuItem3ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        
        
        
        
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new PracticaPilarOcana().setVisible(true);
            }
        });
    }
    public void EscribeFichero(){
    try{
        String nombre = null;
            
            //se crea un nuevo objeto FileWriter
            FileWriter fichero= new FileWriter (nombre);
        Writer fw = null;
            
            BufferedWriter bw = new BufferedWriter(fw);
            jTextArea1.write(bw);
            setTitle(nombre);
            //se escribe el fichero
            fichero.write(texto + "\r\n");
            //se cierra el fichero
            fichero.close();
            
       }catch (IOException ex){
        System.out.println("error al acceder al fichero"); }
}
    
    public void LeerFichero(File leer){
        
        try{
            String fichero = null;
            
            FileReader fr = new FileReader(fichero);
            BufferedReader br = new BufferedReader(fr);
            
          
            //System.out.print(fichero2);
            
           while (fichero != null) {
                jTextArea1.append(fichero);
                jTextArea1.append("\n");
                fichero = br.readLine();

            }
           br.close();
        
                
        }catch(IOException ex){
            
         System.out.println("error al acceder al fichero");
         
        }
    }
    
     public File ObtenerArchivo(){
     
     JFileChooser SelecArchiv = new JFileChooser();
     SelecArchiv.setFileSelectionMode(JFileChooser.FILES_ONLY);
     int Resultado = SelecArchiv.showOpenDialog(this);
     if(Resultado == JFileChooser.CANCEL_OPTION){
        return null; 
     }
     
     File NombreArchivo = SelecArchiv.getSelectedFile();
     if(NombreArchivo == null || "".equals(NombreArchivo.getName())){
         JOptionPane.showMessageDialog(this, "ERROR", "ERROR", JOptionPane.ERROR_MESSAGE);
         return null;
     }
     
     return NombreArchivo;
        }
 
 public void Abrir () throws FileNotFoundException{
     
     File Fichero = ObtenerArchivo ();
     
     if(Fichero.exists() && Fichero != null){
         this.jTextArea1.setText(Fichero.getPath());
         if(Fichero.isFile()){
             
             BufferedReader br = new BufferedReader(new FileReader(Fichero));
             StringBuffer buffer = new StringBuffer();
             String texto;
             this.jTextArea1.setText("");
             try {
                 while((texto = br.readLine())!=null){
                     buffer.append(texto+"\n");  
                 }
            
             
             this.jTextArea1.append(buffer.toString());
              } catch (IOException ex) {  
                 JOptionPane.showMessageDialog(this, "Error: "+ ex);
              }
              
         }
        
     }
}
    
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JFrame jFrame1;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JMenuItem jMenuItem3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea jTextArea1;
    private java.awt.Menu menu1;
    private java.awt.Menu menu2;
    private java.awt.MenuBar menuBar1;
    // End of variables declaration//GEN-END:variables







}
